
OpenOCRCorrect Application Log
Date: 21 Apr 2022 @ 01:42:54
Username:anka

Application Log:
Debug: "/home/anka/Music/ABBV1S2_YP_dinesh-main1/ABBV1S2_YP_dinesh-main/image.xml" (markRegion.cpp)
Debug: Current page name:  "/home/anka/Music/ABBV1S2_YP_dinesh-main1/ABBV1S2_YP_dinesh-main/CorrectorOutput/page-101.html" (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 21 Apr 2022 @ 01:43:33
Username:anka

Application Log:
Debug: "/home/anka/Music/AIML-All-master/image.xml" (markRegion.cpp)
Debug: Current page name:  "/home/anka/Music/AIML-All-master/CorrectorOutput/AIML-all_0001-003.html" (mainwindow.cpp)
Debug: Current page name:  "/home/anka/Music/AIML-All-master/CorrectorOutput/AIML-all_0001-007.html" (mainwindow.cpp)
Debug: Current page name:  "/home/anka/Music/AIML-All-master/CorrectorOutput/AIML-all_0001-002.html" (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 21 Apr 2022 @ 01:44:29
Username:anka

Application Log:
Debug: "/home/anka/Music/ABBV1S2_YP_dinesh-main1/ABBV1S2_YP_dinesh-main/image.xml" (markRegion.cpp)
Debug: Current page name:  "/home/anka/Music/ABBV1S2_YP_dinesh-main1/ABBV1S2_YP_dinesh-main/CorrectorOutput/page-101.html" (mainwindow.cpp)
Debug: Current page name:  "/home/anka/Music/ABBV1S2_YP_dinesh-main1/ABBV1S2_YP_dinesh-main/CorrectorOutput/page-100.html" (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 21 Apr 2022 @ 01:45:28
Username:anka

Application Log:
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "/home/anka/Music/AIML-All-master/image.xml" (markRegion.cpp)
Warning:   OpenType support missing for "Ubuntu", script 11 ()
Debug: Current page name:  "/home/anka/Music/AIML-All-master/CorrectorOutput/AIML-all_0001-002.html" (mainwindow.cpp)
Warning: QIODevice::read (QFile, "/home/anka/Music/AIML-All-master/.cursor.txt"): device not open ()
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: Current page name:  "/home/anka/Music/AIML-All-master/CorrectorOutput/AIML-all_0001-001.html" (mainwindow.cpp)
Warning: QIODevice::read (QFile, "/home/anka/Music/AIML-All-master/.cursor.txt"): device not open ()

OpenOCRCorrect Application Log
Date: 21 Apr 2022 @ 01:46:12
Username:anka

Application Log:
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "/home/anka/Music/ABBV1S2_YP_dinesh-main1/ABBV1S2_YP_dinesh-main/image.xml" (markRegion.cpp)
Debug: Current page name:  "/home/anka/Music/ABBV1S2_YP_dinesh-main1/ABBV1S2_YP_dinesh-main/CorrectorOutput/page-100.html" (mainwindow.cpp)
Debug: Current page name:  "/home/anka/Music/ABBV1S2_YP_dinesh-main1/ABBV1S2_YP_dinesh-main/CorrectorOutput/page-100.html" (mainwindow.cpp)
Debug: Current page name:  "/home/anka/Music/ABBV1S2_YP_dinesh-main1/ABBV1S2_YP_dinesh-main/CorrectorOutput/page-100.html" (mainwindow.cpp)
Debug: "/home/anka/Music/AIML-All-master/image.xml" (markRegion.cpp)
Debug: Current page name:  "/home/anka/Music/AIML-All-master/CorrectorOutput/AIML-all_0001-001.html" (mainwindow.cpp)
Warning: QIODevice::read (QFile, "/home/anka/Music/AIML-All-master/.cursor.txt"): device not open ()
Warning: QIODevice::read (QFile, "/home/anka/Music/AIML-All-master/Comments/HighlightsLog.json"): device not open ()

OpenOCRCorrect Application Log
Date: 22 Apr 2022 @ 21:40:56
Username:sadam

Application Log:
Warning: QVariant::load: unable to load type 42. ()
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "/home/sadam/Downloads/en-hi(1)/en-hi/image.xml" (markRegion.cpp)
Warning: QVariant::save: unable to save type 'QModelIndex' (type id: 42).
 ()
Warning:   OpenType support missing for "Ubuntu", script 11 ()
Debug: Current page name:  "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/p-1.html" (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 22 Apr 2022 @ 21:45:20
Username:sadam

Application Log:
Warning: QVariant::load: unable to load type 42. ()
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "/home/sadam/Downloads/en-hi(1)/en-hi/image.xml" (markRegion.cpp)
Warning: QVariant::save: unable to save type 'QModelIndex' (type id: 42).
 ()
Warning:   OpenType support missing for "Ubuntu", script 11 ()
Debug: Current page name:  "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/p-1.html" (mainwindow.cpp)
Debug: Started Backend Task (worker.cpp)
Debug: "Jabalpur =>Jabalpur;;; " 
 (worker.cpp)
Debug: "/home/sadam/Downloads/en-hi(1)/en-hi/Dicts/CPair" exists (worker.cpp)
Debug: Completed Backend Task (worker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/.."): device not open ()
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/."): device not open ()
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Jabalpur" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Jabalpur(\\b)"') (globalreplaceworker.cpp)
Debug: "p-1.html"  already found in Edited Files Log. No need to update. (mainwindow.cpp)
Debug: Started Backend Task (worker.cpp)
Debug: "plants =>trees " 
 (worker.cpp)
Debug: "/home/sadam/Downloads/en-hi(1)/en-hi/Dicts/CPair" exists (worker.cpp)
Debug: Completed Backend Task (worker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/.."): device not open ()
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/."): device not open ()
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "plants" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)plants(\\b)"') (globalreplaceworker.cpp)
Debug: "p-1.html"  already found in Edited Files Log. No need to update. (mainwindow.cpp)
Debug: Started Backend Task (worker.cpp)
Debug: "(Environmental =>(Environmental$$$ " 
 (worker.cpp)
Debug: "/home/sadam/Downloads/en-hi(1)/en-hi/Dicts/CPair" exists (worker.cpp)
Debug: Completed Backend Task (worker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/.."): device not open ()
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/."): device not open ()
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "\\(Environmental" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)\\(Environmental(\\b)"') (globalreplaceworker.cpp)
Debug: "p-1.html"  already found in Edited Files Log. No need to update. (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 22 Apr 2022 @ 22:02:22
Username:sadam

Application Log:
Warning: QVariant::load: unable to load type 42. ()
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 22 Apr 2022 @ 22:29:11
Username:sadam

Application Log:
Warning: QVariant::load: unable to load type 42. ()
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "/home/sadam/Downloads/en-hi(1)/en-hi/image.xml" (markRegion.cpp)
Warning: QVariant::save: unable to save type 'QModelIndex' (type id: 42).
 ()
Warning:   OpenType support missing for "Ubuntu", script 11 ()
Debug: Current page name:  "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/p-1.html" (mainwindow.cpp)
Debug: Started Backend Task (worker.cpp)
Debug: "India =>India&&& " 
 (worker.cpp)
Debug: "/home/sadam/Downloads/en-hi(1)/en-hi/Dicts/CPair" exists (worker.cpp)
Debug: Completed Backend Task (worker.cpp)
Debug: called addCpair (worker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/.."): device not open ()
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/."): device not open ()
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: "p-1.html"  already found in Edited Files Log. No need to update. (mainwindow.cpp)
Debug: Started Backend Task (worker.cpp)
Debug: "not =>not&& " 
 (worker.cpp)
Debug: "/home/sadam/Downloads/en-hi(1)/en-hi/Dicts/CPair" exists (worker.cpp)
Debug: Completed Backend Task (worker.cpp)
Debug: called addCpair (worker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/.."): device not open ()
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/."): device not open ()
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "not" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)not(\\b)"') (globalreplaceworker.cpp)
Debug: "p-1.html"  already found in Edited Files Log. No need to update. (mainwindow.cpp)
Debug: Started Backend Task (worker.cpp)
Debug: "Multidisciplinary =>Multidisciplinary%%% " 
 (worker.cpp)
Debug: "/home/sadam/Downloads/en-hi(1)/en-hi/Dicts/CPair" exists (worker.cpp)
Debug: Completed Backend Task (worker.cpp)
Debug: called addCpair (worker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/.."): device not open ()
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/."): device not open ()
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: "p-1.html"  already found in Edited Files Log. No need to update. (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 22 Apr 2022 @ 22:39:40
Username:sadam

Application Log:
Warning: QVariant::load: unable to load type 42. ()
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "/home/sadam/Downloads/en-hi(1)/en-hi/image.xml" (markRegion.cpp)
Warning: QVariant::save: unable to save type 'QModelIndex' (type id: 42).
 ()
Warning:   OpenType support missing for "Ubuntu", script 11 ()
Debug: Current page name:  "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/p-1.html" (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 22 Apr 2022 @ 22:40:57
Username:sadam

Application Log:
Warning: QVariant::load: unable to load type 42. ()
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/Comments/Timelog.json"): device not open ()
Debug: "/home/sadam/Downloads/en-hi(1)/en-hi/image.xml" (markRegion.cpp)
Warning: QVariant::save: unable to save type 'QModelIndex' (type id: 42).
 ()
Warning:   OpenType support missing for "Ubuntu", script 11 ()
Debug: Current page name:  "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/p-1.html" (mainwindow.cpp)
Debug: bbox file written succesfully ...  (mainwindow.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/.cursor.txt"): device not open ()
Debug: Started Backend Task (worker.cpp)
Debug: "M multidisciplinary =>Multidisciplinary " 
 (worker.cpp)
Debug: Completed Backend Task (worker.cpp)
Debug: called addCpair (worker.cpp)
Debug: No exist file  "/home/sadam/Downloads/en-hi(1)/en-hi/Dicts/CPair" (worker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/.."): device not open ()
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/."): device not open ()
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "M multidisciplinary" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)M multidisciplinary(\\b)"') (globalreplaceworker.cpp)
Debug: "p-1.html"  not found in Edited Files Log. 
 (mainwindow.cpp)
Debug: Writing  "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/p-1.html"  to file. 
 (mainwindow.cpp)
Debug: Started Backend Task (worker.cpp)
Debug: "India =>India67%%% " 
 (worker.cpp)
Debug: Completed Backend Task (worker.cpp)
Debug: called addCpair (worker.cpp)
Debug: "/home/sadam/Downloads/en-hi(1)/en-hi/Dicts/CPair" exists (worker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/.."): device not open ()
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/."): device not open ()
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "India" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)India(\\b)"') (globalreplaceworker.cpp)
Debug: "p-1.html"  already found in Edited Files Log. No need to update. (mainwindow.cpp)
Debug: Started Backend Task (worker.cpp)
Debug: "sages =>## " 
 (worker.cpp)
Debug: Completed Backend Task (worker.cpp)
Debug: called addCpair (worker.cpp)
Debug: "/home/sadam/Downloads/en-hi(1)/en-hi/Dicts/CPair" exists (worker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/.."): device not open ()
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/."): device not open ()
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "sages" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)sages(\\b)"') (globalreplaceworker.cpp)
Debug: "p-1.html"  already found in Edited Files Log. No need to update. (mainwindow.cpp)
Debug: Started Backend Task (worker.cpp)
Debug: "Tree, =>T&^##, " 
 (worker.cpp)
Debug: Completed Backend Task (worker.cpp)
Debug: called addCpair (worker.cpp)
Debug: "/home/sadam/Downloads/en-hi(1)/en-hi/Dicts/CPair" exists (worker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/.."): device not open ()
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/."): device not open ()
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Tree," 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Tree,(\\b)"') (globalreplaceworker.cpp)
Debug: "p-1.html"  already found in Edited Files Log. No need to update. (mainwindow.cpp)
Debug: Started Backend Task (worker.cpp)
Debug: "Pali =>mali " 
 (worker.cpp)
Debug: Completed Backend Task (worker.cpp)
Debug: "p-1.html"  already found in Edited Files Log. No need to update. (mainwindow.cpp)
Debug: Started Backend Task (worker.cpp)
Debug: "Bilab =>Bila%%##b " 
 (worker.cpp)
Debug: Completed Backend Task (worker.cpp)
Debug: called addCpair (worker.cpp)
Debug: "/home/sadam/Downloads/en-hi(1)/en-hi/Dicts/CPair" exists (worker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/.."): device not open ()
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/."): device not open ()
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: San :  "Bilab" 
Regexp :  QRegExp(patternSyntax=0, pattern='"(\\b)Bilab(\\b)"') (globalreplaceworker.cpp)
Debug: "p-1.html"  already found in Edited Files Log. No need to update. (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 24 Apr 2022 @ 20:02:18
Username:asr16

Application Log:
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "/home/asr16/Downloads/en-hi/image.xml" (markRegion.cpp)
Warning:   OpenType support missing for "Ubuntu", script 11 ()
Debug: Current page name:  "/home/asr16/Downloads/en-hi/CorrectorOutput/p-1.html" (mainwindow.cpp)
Debug: Started Backend Task (worker.cpp)
Debug: "Internally =>International " 
 (worker.cpp)
Debug: "off =>of " 
 (worker.cpp)
Debug: "plantscould =>trees could " 
 (worker.cpp)
Debug: Completed Backend Task (worker.cpp)
Debug: Adding words to Cpair (worker.cpp)
Warning: QIODevice::read (QFile, "/home/asr16/Downloads/en-hi/CorrectorOutput/."): device not open ()
Debug: "/home/asr16/Downloads/en-hi/Dicts/CPair" exists (worker.cpp)
Warning: QIODevice::read (QFile, "/home/asr16/Downloads/en-hi/CorrectorOutput/.."): device not open ()
Warning: QIODevice::read (QFile, "/home/asr16/Downloads/en-hi/CorrectorOutput/."): device not open ()
Warning: QIODevice::read (QFile, "/home/asr16/Downloads/en-hi/CorrectorOutput/.."): device not open ()
Debug: "p-1.html"  already found in Edited Files Log. No need to update. (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 24 Apr 2022 @ 20:04:27
Username:asr16

Application Log:
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "/home/asr16/Downloads/ABBV1S2_YP_dinesh-main/image.xml" (markRegion.cpp)
Debug: Current page name:  "/home/asr16/Downloads/ABBV1S2_YP_dinesh-main/CorrectorOutput/page-100.html" (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 24 Apr 2022 @ 20:04:41
Username:asr16

Application Log:
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "/home/asr16/Desktop/iitb-openocr-digit-tool/TestProject/image.xml" (markRegion.cpp)
Debug: Current page name:  "/home/asr16/Desktop/iitb-openocr-digit-tool/TestProject/CorrectorOutput/page-1.html" (mainwindow.cpp)
Debug: Current page name:  "/home/asr16/Desktop/iitb-openocr-digit-tool/TestProject/CorrectorOutput/page-2.html" (mainwindow.cpp)
Debug: Current page name:  "/home/asr16/Desktop/iitb-openocr-digit-tool/TestProject/CorrectorOutput/page-3.html" (mainwindow.cpp)
Debug: Current page name:  "/home/asr16/Desktop/iitb-openocr-digit-tool/TestProject/CorrectorOutput/page-4.html" (mainwindow.cpp)
Debug: Started Backend Task (worker.cpp)
Debug: "आर्यभटः =>तद " 
 (worker.cpp)
Debug: "एव =>तअह् " 
 (worker.cpp)
Debug: Completed Backend Task (worker.cpp)
Warning:   OpenType support missing for "Ubuntu", script 11 ()
Debug: Adding words to Cpair (worker.cpp)
Debug: "/home/asr16/Desktop/iitb-openocr-digit-tool/TestProject/Dicts/CPair" exists (worker.cpp)
Warning: QIODevice::read (QFile, "/home/asr16/Desktop/iitb-openocr-digit-tool/TestProject/CorrectorOutput/."): device not open ()
Warning: QIODevice::read (QFile, "/home/asr16/Desktop/iitb-openocr-digit-tool/TestProject/CorrectorOutput/.."): device not open ()
Warning: QIODevice::read (QFile, "/home/asr16/Desktop/iitb-openocr-digit-tool/TestProject/CorrectorOutput/."): device not open ()
Warning: QIODevice::read (QFile, "/home/asr16/Desktop/iitb-openocr-digit-tool/TestProject/CorrectorOutput/.."): device not open ()
Debug: "page-4.html"  not found in Edited Files Log. 
 (mainwindow.cpp)
Debug: Writing  "/home/asr16/Desktop/iitb-openocr-digit-tool/TestProject/CorrectorOutput/page-4.html"  to file. 
 (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 24 Apr 2022 @ 20:08:11
Username:asr16

Application Log:
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "/home/asr16/Desktop/iitb-openocr-digit-tool/TestProject/image.xml" (markRegion.cpp)
Debug: Current page name:  "/home/asr16/Desktop/iitb-openocr-digit-tool/TestProject/CorrectorOutput/page-4.html" (mainwindow.cpp)
Debug: Current page name:  "/home/asr16/Desktop/iitb-openocr-digit-tool/TestProject/CorrectorOutput/page-4.html" (mainwindow.cpp)
Debug: Started Backend Task (worker.cpp)
Debug: "तद =>कदा " 
 (worker.cpp)
Debug: "तअह् =>अत्रS " 
 (worker.cpp)
Debug: Completed Backend Task (worker.cpp)
Warning:   OpenType support missing for "Ubuntu", script 11 ()
Debug: Adding words to Cpair (worker.cpp)
Warning: QIODevice::read (QFile, "/home/asr16/Desktop/iitb-openocr-digit-tool/TestProject/CorrectorOutput/."): device not open ()
Debug: "/home/asr16/Desktop/iitb-openocr-digit-tool/TestProject/Dicts/CPair" exists (worker.cpp)
Warning: QIODevice::read (QFile, "/home/asr16/Desktop/iitb-openocr-digit-tool/TestProject/CorrectorOutput/.."): device not open ()
Warning: QIODevice::read (QFile, "/home/asr16/Desktop/iitb-openocr-digit-tool/TestProject/CorrectorOutput/."): device not open ()
Warning: QIODevice::read (QFile, "/home/asr16/Desktop/iitb-openocr-digit-tool/TestProject/CorrectorOutput/.."): device not open ()
Debug: "page-4.html"  already found in Edited Files Log. No need to update. (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 25 Apr 2022 @ 16:36:54
Username:sadam

Application Log:
Warning: QVariant::load: unable to load type 42. ()
Warning: QVariant::save: unable to save type 'QModelIndex' (type id: 42).
 ()
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "/home/sadam/Downloads/en-hi(1)/en-hi/image.xml" (markRegion.cpp)
Warning: QVariant::save: unable to save type 'QModelIndex' (type id: 42).
 ()
Warning:   OpenType support missing for "Ubuntu", script 11 ()
Debug: Current page name:  "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/p-1.html" (mainwindow.cpp)
Debug: Started Backend Task (worker.cpp)
Debug: "sages =>wages " 
 (worker.cpp)
Debug: Completed Backend Task (worker.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/.."): device not open ()
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/."): device not open ()
Debug: Adding words to Cpair (worker.cpp)
Debug: "/home/sadam/Downloads/en-hi(1)/en-hi/Dicts/CPair" exists (worker.cpp)
Debug: "p-1.html"  already found in Edited Files Log. No need to update. (mainwindow.cpp)
Debug: Started Backend Task (worker.cpp)
Debug: "Yatra =>Yatra! " 
 (worker.cpp)
Debug: Completed Backend Task (worker.cpp)
Debug: "p-1.html"  already found in Edited Files Log. No need to update. (mainwindow.cpp)
Debug: Adding words to Cpair (worker.cpp)
Debug: "/home/sadam/Downloads/en-hi(1)/en-hi/Dicts/CPair" exists (worker.cpp)
Debug: Started Backend Task (worker.cpp)
Debug: "wages =>w9ages " 
 (worker.cpp)
Debug: Completed Backend Task (worker.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/.."): device not open ()
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/."): device not open ()
Debug: Adding words to Cpair (worker.cpp)
Debug: "/home/sadam/Downloads/en-hi(1)/en-hi/Dicts/CPair" exists (worker.cpp)
Debug: "p-1.html"  already found in Edited Files Log. No need to update. (mainwindow.cpp)
Debug: Started Backend Task (worker.cpp)
Debug: "Palim&& =>Palim&7& " 
 (worker.cpp)
Debug: "planted&& =>plantehd&& " 
 (worker.cpp)
Debug: "habitable =>habihtable " 
 (worker.cpp)
Debug: Completed Backend Task (worker.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/.."): device not open ()
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/."): device not open ()
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/.."): device not open ()
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/."): device not open ()
Debug: Adding words to Cpair (worker.cpp)
Debug: "/home/sadam/Downloads/en-hi(1)/en-hi/Dicts/CPair" exists (worker.cpp)
Debug: "p-1.html"  already found in Edited Files Log. No need to update. (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 29 Apr 2022 @ 18:53:58
Username:sadam

Application Log:
Warning: QVariant::load: unable to load type 42. ()
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "/home/sadam/Downloads/NGMA_5_1/image.xml" (markRegion.cpp)
Warning: QVariant::save: unable to save type 'QModelIndex' (type id: 42).
 ()
Warning: QVariant::save: unable to save type 'QModelIndex' (type id: 42).
 ()
Warning:   OpenType support missing for "Ubuntu", script 11 ()
Debug: Current page name:  "/home/sadam/Downloads/NGMA_5_1/CorrectorOutput/p-005.html" (mainwindow.cpp)
Debug: Started Backend Task (worker.cpp)
Debug: "tirtle =>title " 
 (worker.cpp)
Debug: Completed Backend Task (worker.cpp)
Debug: Checkbox Checked (mainwindow.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/NGMA_5_1/CorrectorOutput/."): device not open ()
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/NGMA_5_1/CorrectorOutput/.."): device not open ()
Debug: Adding words to Cpair (worker.cpp)
Debug: "/home/sadam/Downloads/NGMA_5_1/Dicts/CPair" exists (worker.cpp)
Debug: "p-005.html"  not found in Edited Files Log. 
 (mainwindow.cpp)
Debug: Writing  "/home/sadam/Downloads/NGMA_5_1/CorrectorOutput/p-005.html"  to file. 
 (mainwindow.cpp)
Debug: App crashed with signal:  "SIGSEGV" (main.cpp)

OpenOCRCorrect Application Log
Date: 29 Apr 2022 @ 18:56:01
Username:sadam

Application Log:
Warning: QVariant::load: unable to load type 42. ()
Warning: QVariant::save: unable to save type 'QModelIndex' (type id: 42).
 ()
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "/home/sadam/Downloads/NGMA_5_1/image.xml" (markRegion.cpp)
Warning: QVariant::save: unable to save type 'QModelIndex' (type id: 42).
 ()
Warning:   OpenType support missing for "Ubuntu", script 11 ()
Debug: Current page name:  "/home/sadam/Downloads/NGMA_5_1/CorrectorOutput/p-005.html" (mainwindow.cpp)
Warning: QVariant::save: unable to save type 'QModelIndex' (type id: 42).
 ()
Debug: Current page name:  "/home/sadam/Downloads/NGMA_5_1/CorrectorOutput/p-001.html" (mainwindow.cpp)
Debug: Started Backend Task (worker.cpp)
Debug: "hini =>hindi " 
 (worker.cpp)
Debug: "hindie6 =>hindi " 
 (worker.cpp)
Debug: Completed Backend Task (worker.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/NGMA_5_1/CorrectorOutput/."): device not open ()
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/NGMA_5_1/CorrectorOutput/.."): device not open ()
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/NGMA_5_1/CorrectorOutput/."): device not open ()
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/NGMA_5_1/CorrectorOutput/.."): device not open ()
Debug: Adding words to Cpair (worker.cpp)
Debug: "/home/sadam/Downloads/NGMA_5_1/Dicts/CPair" exists (worker.cpp)
Debug: "p-001.html"  already found in Edited Files Log. No need to update. (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 30 Apr 2022 @ 20:45:45
Username:sadam

Application Log:
Warning: QVariant::load: unable to load type 42. ()
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "/home/sadam/Downloads/en-hi(1)/en-hi/image.xml" (markRegion.cpp)
Warning: QVariant::save: unable to save type 'QModelIndex' (type id: 42).
 ()
Warning: QVariant::save: unable to save type 'QModelIndex' (type id: 42).
 ()
Warning:   OpenType support missing for "Ubuntu", script 11 ()
Debug: Current page name:  "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/p-1.html" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: Started Backend Task (worker.cpp)
Debug: "edit_ =>edit_123 " 
 (worker.cpp)
Debug: Completed Backend Task (worker.cpp)
Debug: Checkbox Checked (mainwindow.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/.."): device not open ()
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/."): device not open ()
Debug: Adding words to Cpair (worker.cpp)
Debug: "/home/sadam/Downloads/en-hi(1)/en-hi/Dicts/CPair" exists (worker.cpp)
Debug: "p-1.html"  already found in Edited Files Log. No need to update. (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 30 Apr 2022 @ 20:46:20
Username:sadam

Application Log:
Warning: QVariant::load: unable to load type 42. ()
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "/home/sadam/Downloads/en-hi(1)/en-hi/image.xml" (markRegion.cpp)
Warning: QVariant::save: unable to save type 'QModelIndex' (type id: 42).
 ()
Warning:   OpenType support missing for "Ubuntu", script 11 ()
Debug: Current page name:  "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/p-1.html" (mainwindow.cpp)
Debug: Started Backend Task (worker.cpp)
Debug: "salam =>sadam " 
 (worker.cpp)
Debug: "edit_123 =>edit_1124 " 
 (worker.cpp)
Debug: "Dr. =>Dr " 
 (worker.cpp)
Debug: "planted, =>slanted, " 
 (worker.cpp)
Debug: Completed Backend Task (worker.cpp)
Debug: Final Sentence "In his inaugural talk, Dr Region ==>In his inaugural talk, Dr Region " (mainwindow.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/.."): device not open ()
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/."): device not open ()
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/.."): device not open ()
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/."): device not open ()
Debug: Adding words to Cpair (worker.cpp)
Debug: "/home/sadam/Downloads/en-hi(1)/en-hi/Dicts/CPair" exists (worker.cpp)
Debug: "p-1.html"  already found in Edited Files Log. No need to update. (mainwindow.cpp)
Debug: Started Backend Task (worker.cpp)
Debug: "Trees =>plants " 
 (worker.cpp)
Debug: "1 =>2 " 
 (worker.cpp)
Debug: Completed Backend Task (worker.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/.."): device not open ()
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/."): device not open ()
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/.."): device not open ()
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/."): device not open ()
Debug: Adding words to Cpair (worker.cpp)
Debug: "/home/sadam/Downloads/en-hi(1)/en-hi/Dicts/CPair" exists (worker.cpp)
Debug: "p-1.html"  already found in Edited Files Log. No need to update. (mainwindow.cpp)
Warning: QVariant::save: unable to save type 'QModelIndex' (type id: 42).
 ()
Debug: Current page name:  "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/p-2.html" (mainwindow.cpp)
Warning: QVariant::save: unable to save type 'QModelIndex' (type id: 42).
 ()
Debug: Current page name:  "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/p-3.html" (mainwindow.cpp)
Debug: bbox file written succesfully ...  (mainwindow.cpp)
Warning: QVariant::save: unable to save type 'QModelIndex' (type id: 42).
 ()
Debug: Current page name:  "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/p-2.html" (mainwindow.cpp)
Warning: QVariant::save: unable to save type 'QModelIndex' (type id: 42).
 ()
Debug: Current page name:  "/home/sadam/Downloads/en-hi(1)/en-hi/CorrectorOutput/p-1.html" (mainwindow.cpp)
Debug: "/home/sadam/Downloads/NGMA_5_1/image.xml" (markRegion.cpp)
Warning: QVariant::save: unable to save type 'QModelIndex' (type id: 42).
 ()
Warning: QVariant::save: unable to save type 'QModelIndex' (type id: 42).
 ()
Debug: Current page name:  "/home/sadam/Downloads/NGMA_5_1/CorrectorOutput/p-001.html" (mainwindow.cpp)
Debug: Started Backend Task (worker.cpp)
Debug: "144 =>sadam " 
 (worker.cpp)
Debug: Completed Backend Task (worker.cpp)
Debug: Checkbox Checked (mainwindow.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/NGMA_5_1/CorrectorOutput/."): device not open ()
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/NGMA_5_1/CorrectorOutput/.."): device not open ()
Debug: Adding words to Cpair (worker.cpp)
Debug: "/home/sadam/Downloads/NGMA_5_1/Dicts/CPair" exists (worker.cpp)
Debug: "p-001.html"  already found in Edited Files Log. No need to update. (mainwindow.cpp)
Warning: QVariant::save: unable to save type 'QModelIndex' (type id: 42).
 ()
Debug: Current page name:  "/home/sadam/Downloads/NGMA_5_1/CorrectorOutput/p-002.html" (mainwindow.cpp)
Warning: QVariant::save: unable to save type 'QModelIndex' (type id: 42).
 ()
Debug: Current page name:  "/home/sadam/Downloads/NGMA_5_1/CorrectorOutput/p-003.html" (mainwindow.cpp)
Warning: QVariant::save: unable to save type 'QModelIndex' (type id: 42).
 ()
Debug: Current page name:  "/home/sadam/Downloads/NGMA_5_1/CorrectorOutput/p-002.html" (mainwindow.cpp)
Debug: Started Backend Task (worker.cpp)
Debug: Completed Backend Task (worker.cpp)
Debug: Adding words to Cpair (worker.cpp)
Debug: "/home/sadam/Downloads/NGMA_5_1/Dicts/CPair" exists (worker.cpp)
Debug: "p-002.html"  already found in Edited Files Log. No need to update. (mainwindow.cpp)
Warning: QVariant::save: unable to save type 'QModelIndex' (type id: 42).
 ()
Debug: Current page name:  "/home/sadam/Downloads/NGMA_5_1/CorrectorOutput/p-003.html" (mainwindow.cpp)
Warning: QVariant::save: unable to save type 'QModelIndex' (type id: 42).
 ()
Debug: Current page name:  "/home/sadam/Downloads/NGMA_5_1/CorrectorOutput/p-002.html" (mainwindow.cpp)
Debug: Started Backend Task (worker.cpp)
Debug: "1 =>hello " 
 (worker.cpp)
Debug: "(indexed =>(indexed1 " 
 (worker.cpp)
Debug: Completed Backend Task (worker.cpp)
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/NGMA_5_1/CorrectorOutput/."): device not open ()
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/NGMA_5_1/CorrectorOutput/.."): device not open ()
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/NGMA_5_1/CorrectorOutput/."): device not open ()
Warning: QIODevice::read (QFile, "/home/sadam/Downloads/NGMA_5_1/CorrectorOutput/.."): device not open ()
Debug: Adding words to Cpair (worker.cpp)
Debug: "/home/sadam/Downloads/NGMA_5_1/Dicts/CPair" exists (worker.cpp)
Debug: "p-002.html"  already found in Edited Files Log. No need to update. (mainwindow.cpp)
Warning: QVariant::save: unable to save type 'QModelIndex' (type id: 42).
 ()
Debug: Current page name:  "/home/sadam/Downloads/NGMA_5_1/CorrectorOutput/p-003.html" (mainwindow.cpp)
Warning: QVariant::save: unable to save type 'QModelIndex' (type id: 42).
 ()
Debug: Current page name:  "/home/sadam/Downloads/NGMA_5_1/CorrectorOutput/p-002.html" (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 02 May 2022 @ 11:27:58
Username:sujay

Application Log:
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "/home/sujay/Downloads/Erich_Von_Daniken/image.xml" (markRegion.cpp)
Debug: Current page name:  "/home/sujay/Downloads/Erich_Von_Daniken/CorrectorOutput/p-001.html" (mainwindow.cpp)
Warning:   OpenType support missing for "Ubuntu", script 11 ()
Debug: Current page name:  "/home/sujay/Downloads/Erich_Von_Daniken/CorrectorOutput/p-002.html" (mainwindow.cpp)
Debug: Current page name:  "/home/sujay/Downloads/Erich_Von_Daniken/CorrectorOutput/p-004.html" (mainwindow.cpp)
Debug: bbox file written succesfully ...  (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 02 May 2022 @ 11:31:40
Username:sujay

Application Log:
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 02 May 2022 @ 11:32:11
Username:sujay

Application Log:
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.8.9" (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 02 May 2022 @ 11:32:32
Username:sujay

Application Log:
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.8.9" (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 02 May 2022 @ 11:33:41
Username:sujay

Application Log:
Debug: "/home/sujay/Downloads/Erich_Von_Daniken/image.xml" (markRegion.cpp)
Warning:   OpenType support missing for "Ubuntu", script 11 ()
Debug: Current page name:  "/home/sujay/Downloads/Erich_Von_Daniken/CorrectorOutput/p-004.html" (mainwindow.cpp)
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.8.9" (mainwindow.cpp)
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.8.9" (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 02 May 2022 @ 11:34:39
Username:sujay

Application Log:
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.8.9" (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 02 May 2022 @ 11:35:02
Username:sujay

Application Log:

OpenOCRCorrect Application Log
Date: 02 May 2022 @ 11:35:13
Username:sujay

Application Log:
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.8.9" (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 02 May 2022 @ 11:35:40
Username:sujay

Application Log:
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.8.9" (mainwindow.cpp)
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.8.9" (mainwindow.cpp)
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.8.9" (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 02 May 2022 @ 11:36:53
Username:sujay

Application Log:
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.8.9" (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 02 May 2022 @ 11:38:31
Username:sujay

Application Log:
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.8.9" (mainwindow.cpp)
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.8.9" (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 02 May 2022 @ 11:39:16
Username:sujay

Application Log:
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.8.9" (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 02 May 2022 @ 11:40:08
Username:sujay

Application Log:
Info: "https://api.github.com/repos/IITB-OpenOCRCorrect/iitb-openocr-digit-tool/releases" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.9.0" (mainwindow.cpp)
Debug: "v2.8.9" (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 05 May 2022 @ 11:38:26
Username:anka

Application Log:
Warning: libpng warning: iCCP: known incorrect sRGB profile ()
Debug: "/home/anka/Music/ABBV1S2_YP_dinesh-main1/ABBV1S2_YP_dinesh-main/image.xml" (markRegion.cpp)
Debug: Current page name:  "/home/anka/Music/ABBV1S2_YP_dinesh-main1/ABBV1S2_YP_dinesh-main/CorrectorOutput/page-54.html" (mainwindow.cpp)

OpenOCRCorrect Application Log
Date: 05 May 2022 @ 11:38:56
Username:anka

Application Log:
Warning: libpng warning: iCCP: known incorrect sRGB profile ()
Debug: "/home/anka/Music/ABBV1S2_YP_dinesh-main1/ABBV1S2_YP_dinesh-main/image.xml" (markRegion.cpp)
Debug: Current page name:  "/home/anka/Music/ABBV1S2_YP_dinesh-main1/ABBV1S2_YP_dinesh-main/CorrectorOutput/page-54.html" (mainwindow.cpp)
